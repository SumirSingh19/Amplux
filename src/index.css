@import url('https://fonts.googleapis.com/css2?family=Abel&family=Orbitron&display=swap');

@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

@import "slick-carousel/slick/slick.css";
@import "slick-carousel/slick/slick-theme.css";

@tailwind base;
@tailwind components;
@tailwind utilities;

.slick-slide {
    gap: 10px;
}

.rounded-checkbox {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    outline: none;
    cursor: pointer;
    margin-right: 0.5em;
    border: 1px solid black;
    position: relative;
  }
  
  @media (max-width: 767.98px) {
    .rounded-checkbox {
      width: .5em;
      height: .5em;
    }
  }
  
  .rounded-checkbox:checked {
    background-color: transparent;
  }
  
  .rounded-checkbox::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0.5em;
    height: 0.5em;
    border-radius: 50%;
    background-color: transparent;
  }
  
  @media (max-width: 767.98px) {
    .rounded-checkbox::before {
      width: .2em;
      height: .2em;
    }
  }
  
  .rounded-checkbox:checked::before {
    background-color: black;
  }
  
  /* Animation effect for the filled circle */
  .rounded-checkbox:checked::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0.6em;
    height: 0.6em;
    border-radius: 50%;
    background-color: #5C5C5C;
    transition: width 0.3s ease, height 0.3s ease; /* Add transition for smooth animation */
  }
  
  @media (max-width: 767.98px) {
    .rounded-checkbox::after {
      width: .2em;
      height: .2em;
    }
  }
  
  /* Additional CSS to remove animation effect from previously selected checkbox */
  .rounded-checkbox:not(:checked) + .rounded-checkbox::after {
    width: 0; /* Set width to 0 to hide the filled circle */
    height: 0; /* Set height to 0 to hide the filled circle */
  }

.slide-in {
  opacity: 0;
  transform: translateY(100px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.aos-animate .slide-in {
    opacity: 1;
    transform: translateY(0);
}

.scroll-container {
  overflow-x: hidden;
  overflow-y: auto;
  white-space: nowrap;
  width: 100%;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}


.slider-container {
  position: relative;
  overflow: hidden;
  width: 100%;
}

.slide {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.slide-active {
  opacity: 1;
}

.slide-hidden {
  opacity: 0;
}

.slide-content {
  padding: 20px;
  text-align: center;
}

.slide-image {
  width: 100%;
  height: auto;
}

/* Add these styles to your CSS file */

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.infinite-scroll-container {
  display: flex;
  overflow: hidden;
  white-space: nowrap;
  position: relative;
}

.scroll-wrapper {
  display: flex;
  animation: scroll 60s linear infinite; /* Slower animation */
}

.scroll-wrapper:hover {
  animation-play-state: paused;
}

.scroll-item {
  flex: 0 0 auto;
  margin-right: 1rem;
}

.section-link:hover {
  animation: grow 0.5s ease-in-out forwards;
}

@keyframes grow {
  from {
    font-weight: normal;
    transform: scale(1);
  }
  to {
    font-weight: bold;
    transform: scale(1.05); /* Adjust scale for desired size increase */
  }
}

/* Updated CSS for Text Reveal Animation */

/* Container for the text reveal animation */
.reveal-container {
  position: relative;
  overflow: hidden;
  height: auto;
}

/* Individual word animation */
.animated-word {
  opacity: 0;
  position: relative;
  bottom: -20px; /* Start position */
  animation: smooth-appear 2s forwards;
}

@keyframes smooth-appear {
  to {
      bottom: 0;
      opacity: 1;
  }
}

/* src/components/IsometricCard.css */
/* src/components/IsometricCard.css */
.isometric-container {
  display: flex;
  flex-direction: column; /* Stack images vertically */
  gap: -10rem; /* Overlap between images */
  perspective: 900px;
}

@media (max-width: 767.98px) {
  .isometric-container {
    gap: 0;
  }
  
}

.isometric-card {
  position: relative;
  width: 400px;
  height: 200px;
  transform-style: preserve-3d;
  transform: rotateX(43deg) rotateZ(-45deg) rotateY(4deg) translateX(0) translateY(0); /* Adjust z-rotation */
  transition: transform 0.4s, margin-top 0.4s;
  z-index: 3; /* Ensure Photo1 is on top */
}

@media (max-width: 767.98px) {
  .isometric-card {
    padding: 0.5rem;
    width: 300px;
    height: 178px;
    transform: rotateX(45deg) rotateZ(-45deg) rotateY(4deg) translateX(0) translateY(0);
  }
}

.isometric-card:nth-child(2) {
  margin-top: -150px; /* Adjust overlap for the second image */
  z-index: 2;
  transform: rotateX(45deg) rotateZ(-46deg) rotateY(6deg) translateZ(10px) translateX(-12px) translateY(15px);
}

.isometric-card:nth-child(3) {
  margin-top: -160px; /* Adjust overlap for the third image */
  z-index: 1;
  transform: rotateX(45deg) rotateZ(-45deg) rotateY(5deg) translateY(10px);
}

/* Apply hover effect to the entire container */
.isometric-container:hover .isometric-card:nth-child(1) {
  margin-top: 3px;
  transition-duration: 700ms;
}

.isometric-container:hover .isometric-card:nth-child(2) {
  margin-top: -140px;
  transition-duration: 700ms;
}

.isometric-container:hover .isometric-card:nth-child(3) {
  margin-top: -150px;
  transition-duration: 700ms;
}

.card-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.blurred {
  filter: blur(5px);
}

.main-content {
  transition: filter 0.5s ease;
}